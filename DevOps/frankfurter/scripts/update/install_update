#!/bin/bash

# install_update -- Updates software on a generic robot.
#
# Usage: install_update [extracted-tarball-root]

sudo rm -rf /docs

piecentral="$HOME/PieCentral"
piecentral_backup="$HOME/PieCentral-backup"
systemd_units="/etc/systemd/system"

# Replace a backup of PieCentral
rm -rf "$piecentral_backup"
mkdir -p "$piecentral"
cp -R "$piecentral" "$piecentral_backup"

IFS=%
indent='  '

# Replaces a file or package (destroys the source)
function replace_package {
  if [ ! -e "$1" ]; then
    echo -e $indent"Warning: package source '$1' does not exist." >&2
  else
    sudo rm -rf "$2"
    mv "$1" "$2"
    echo -e $indent"Replaced '$2'"
  fi
}

# Reinstall Python packages
# NOTE: Doesn't really work, and takes forever. Commented for now.
#       Reinstall packages on a per-package basis.
# ls "$1/python/"* | xargs -n 1 -d '\n' sudo pip3 install --upgrade --no-deps

# Replace `runtime`, `hibike`, and `docs`
replace_package "$1/runtime" "$piecentral/runtime"
replace_package "$1/hibike" "$piecentral/hibike"
replace_package "$1/docs" "$HOME/docs"

sudo pip3 install "$1/resources/"*.whl "$1/resources/"*.tar.gz

# Restore files that should persist
cp "$piecentral_backup/runtime/studentCode.py" "$piecentral/runtime"
cp "$piecentral_backup/runtime/namedPeripherals.csv" "$piecentral/runtime"
ln -s "$piecentral/hibike/hibikeDevices.json" "$piecentral/runtime/hibikeDevices.json"

# Copy `.bashrc` and executables
replace_package "$1/resources/update.sh" "/home/ubuntu/bin/update.sh"
chmod 755 "/home/ubuntu/bin/"*
replace_package "$1/resources/bashrc" "/home/ubuntu/.bashrc"
chmod 644 "/home/ubuntu/.bashrc"
sudo chown -R "ubuntu:ubuntu" /home/ubuntu

# Update and enable services
sudo mv "$1/resources/runtime.service" "$systemd_units/runtime.service"
sudo mv "$1/resources/update.service" "$systemd_units/update.service"
sudo systemctl daemon-reload
sudo systemctl reenable update.service
sudo systemctl reenable runtime.service
